cmake_minimum_required(VERSION 2.8)

INCLUDE(FindProtobuf)
FIND_PACKAGE(Protobuf REQUIRED)

# Gtest source archive to use
SET(GTEST_ARCHIVE gtest-1.7.0.zip)
# Where to download archive (if it doesn't exist)
SET(GTEST_DLSERVER http://googletest.googlecode.com/files)
SET(GTEST_ROOT $ENV{HOME}/Downloads/gtest-1.7.0)

IF(NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/${GTEST_ARCHIVE})
	MESSAGE("Downloading file: ${CMAKE_SOURCE_DIR}/${GTEST_ARCHIVE}")
	FILE(DOWNLOAD ${GTEST_DLSERVER}/${GTEST_ARCHIVE}
		${CMAKE_CURRENT_BINARY_DIR}/${GTEST_ARCHIVE})

	EXECUTE_PROCESS(COMMAND cmake -E tar zxf ${GTEST_ARCHIVE}
		WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})

	ADD_SUBDIRECTORY(${CMAKE_CURRENT_BINARY_DIR}/gtest-1.7.0 gtest-1.7.0)
	INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/include ${CMAKE_CURRENT_BINARY_DIR})
ENDIF(NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/${GTEST_ARCHIVE})

FILE(GLOB ProtoFiles "${CMAKE_CURRENT_SOURCE_DIR}/proto/*.proto")
PROTOBUF_GENERATE_CPP(ProtoSources ProtoHeaders ${ProtoFiles})
MESSAGE("Generated file: ${ProtoSources}")

INCLUDE_DIRECTORIES(
    ${GTEST_ROOT}/include
    ${PROTOBUF_INCLUDE_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}
)

FILE(GLOB SRC_TESTS *.cc)

ADD_EXECUTABLE(conformance_test
	${SRC_TESTS}
	${ProtoSources}
)

TARGET_LINK_LIBRARIES(conformance_test
    pthread
    ${GTEST_ROOT}/build/libgtest.a
    ${GTEST_ROOT}/build/libgtest_main.a
    ${PROTOBUF_LIBRARY}
)
